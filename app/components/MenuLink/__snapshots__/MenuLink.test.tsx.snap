// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuLink renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MenuLink
    iconStyles={null}
    name="test"
    to="testPath"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "activeClassName": "active",
      "aria-current": "page",
      "children": Array [
        undefined,
        "test",
      ],
      "className": undefined,
      "onClick": undefined,
      "to": "testPath",
    },
    "ref": null,
    "rendered": Array [
      undefined,
      "test",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "activeClassName": "active",
        "aria-current": "page",
        "children": Array [
          undefined,
          "test",
        ],
        "className": undefined,
        "onClick": undefined,
        "to": "testPath",
      },
      "ref": null,
      "rendered": Array [
        undefined,
        "test",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`MenuLink renders correctly with icon 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MenuLink
    iconName="testName"
    iconStyles={null}
    name="test"
    to="testPath"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "activeClassName": "active",
      "aria-current": "page",
      "children": Array [
        <Icon
          style={null}
          type="testName"
        />,
        "test",
      ],
      "className": undefined,
      "onClick": undefined,
      "to": "testPath",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "style": null,
          "type": "testName",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "test",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "activeClassName": "active",
        "aria-current": "page",
        "children": Array [
          <Icon
            style={null}
            type="testName"
          />,
          "test",
        ],
        "className": undefined,
        "onClick": undefined,
        "to": "testPath",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "style": null,
            "type": "testName",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "test",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
